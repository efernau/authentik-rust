/*
 * authentik
 *
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(tag = "component")]
pub enum LoginChallengeTypes {
    #[serde(rename="xak-flow-redirect")]
    XakFlowRedirect(Box<models::RedirectChallenge>),
    #[serde(rename="ak-source-plex")]
    AkSourcePlex(Box<models::PlexAuthenticationChallenge>),
    #[serde(rename="ak-source-oauth-apple")]
    AkSourceOauthApple(Box<models::AppleLoginChallenge>),
}

impl Default for LoginChallengeTypes {
    fn default() -> Self {
        Self::XakFlowRedirect(Default::default())
    }
}


