/*
 * authentik
 *
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// Token : Token Serializer
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Token {
    #[serde(rename = "pk")]
    pub pk: uuid::Uuid,
    /// Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
    #[serde(rename = "managed", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub managed: Option<Option<String>>,
    #[serde(rename = "identifier")]
    pub identifier: String,
    #[serde(rename = "intent", skip_serializing_if = "Option::is_none")]
    pub intent: Option<models::IntentEnum>,
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<i32>,
    #[serde(rename = "user_obj")]
    pub user_obj: Box<models::User>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "expires", skip_serializing_if = "Option::is_none")]
    pub expires: Option<String>,
    #[serde(rename = "expiring", skip_serializing_if = "Option::is_none")]
    pub expiring: Option<bool>,
}

impl Token {
    /// Token Serializer
    pub fn new(pk: uuid::Uuid, identifier: String, user_obj: models::User) -> Token {
        Token {
            pk,
            managed: None,
            identifier,
            intent: None,
            user: None,
            user_obj: Box::new(user_obj),
            description: None,
            expires: None,
            expiring: None,
        }
    }
}

