/*
 * authentik
 *
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// LicenseForecast : Serializer for license forecast
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LicenseForecast {
    #[serde(rename = "internal_users")]
    pub internal_users: i32,
    #[serde(rename = "external_users")]
    pub external_users: i32,
    #[serde(rename = "forecasted_internal_users")]
    pub forecasted_internal_users: i32,
    #[serde(rename = "forecasted_external_users")]
    pub forecasted_external_users: i32,
}

impl LicenseForecast {
    /// Serializer for license forecast
    pub fn new(internal_users: i32, external_users: i32, forecasted_internal_users: i32, forecasted_external_users: i32) -> LicenseForecast {
        LicenseForecast {
            internal_users,
            external_users,
            forecasted_internal_users,
            forecasted_external_users,
        }
    }
}

