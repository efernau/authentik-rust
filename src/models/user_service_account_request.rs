/*
 * authentik
 *
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserServiceAccountRequest {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "create_group", skip_serializing_if = "Option::is_none")]
    pub create_group: Option<bool>,
    #[serde(rename = "expiring", skip_serializing_if = "Option::is_none")]
    pub expiring: Option<bool>,
    /// If not provided, valid for 360 days
    #[serde(rename = "expires", skip_serializing_if = "Option::is_none")]
    pub expires: Option<String>,
}

impl UserServiceAccountRequest {
    pub fn new(name: String) -> UserServiceAccountRequest {
        UserServiceAccountRequest {
            name,
            create_group: None,
            expiring: None,
            expires: None,
        }
    }
}

