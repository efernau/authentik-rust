/*
 * authentik
 *
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// ConsentStageModeEnum : * `always_require` - Always Require * `permanent` - Permanent * `expiring` - Expiring
/// * `always_require` - Always Require * `permanent` - Permanent * `expiring` - Expiring
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ConsentStageModeEnum {
    #[serde(rename = "always_require")]
    AlwaysRequire,
    #[serde(rename = "permanent")]
    Permanent,
    #[serde(rename = "expiring")]
    Expiring,

}

impl ToString for ConsentStageModeEnum {
    fn to_string(&self) -> String {
        match self {
            Self::AlwaysRequire => String::from("always_require"),
            Self::Permanent => String::from("permanent"),
            Self::Expiring => String::from("expiring"),
        }
    }
}

impl Default for ConsentStageModeEnum {
    fn default() -> ConsentStageModeEnum {
        Self::AlwaysRequire
    }
}

