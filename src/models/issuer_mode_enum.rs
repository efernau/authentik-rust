/*
 * authentik
 *
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// IssuerModeEnum : * `global` - Same identifier is used for all providers * `per_provider` - Each provider has a different issuer, based on the application slug.
/// * `global` - Same identifier is used for all providers * `per_provider` - Each provider has a different issuer, based on the application slug.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum IssuerModeEnum {
    #[serde(rename = "global")]
    Global,
    #[serde(rename = "per_provider")]
    PerProvider,

}

impl ToString for IssuerModeEnum {
    fn to_string(&self) -> String {
        match self {
            Self::Global => String::from("global"),
            Self::PerProvider => String::from("per_provider"),
        }
    }
}

impl Default for IssuerModeEnum {
    fn default() -> IssuerModeEnum {
        Self::Global
    }
}

