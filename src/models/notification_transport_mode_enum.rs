/*
 * authentik
 *
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// NotificationTransportModeEnum : * `local` - authentik inbuilt notifications * `webhook` - Generic Webhook * `webhook_slack` - Slack Webhook (Slack/Discord) * `email` - Email
/// * `local` - authentik inbuilt notifications * `webhook` - Generic Webhook * `webhook_slack` - Slack Webhook (Slack/Discord) * `email` - Email
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum NotificationTransportModeEnum {
    #[serde(rename = "local")]
    Local,
    #[serde(rename = "webhook")]
    Webhook,
    #[serde(rename = "webhook_slack")]
    WebhookSlack,
    #[serde(rename = "email")]
    Email,

}

impl ToString for NotificationTransportModeEnum {
    fn to_string(&self) -> String {
        match self {
            Self::Local => String::from("local"),
            Self::Webhook => String::from("webhook"),
            Self::WebhookSlack => String::from("webhook_slack"),
            Self::Email => String::from("email"),
        }
    }
}

impl Default for NotificationTransportModeEnum {
    fn default() -> NotificationTransportModeEnum {
        Self::Local
    }
}

