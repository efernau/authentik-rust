/*
 * authentik
 *
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// PatchedOutpostRequest : Outpost Serializer
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PatchedOutpostRequest {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<models::OutpostTypeEnum>,
    #[serde(rename = "providers", skip_serializing_if = "Option::is_none")]
    pub providers: Option<Vec<i32>>,
    /// Select Service-Connection authentik should use to manage this outpost. Leave empty if authentik should not handle the deployment.
    #[serde(rename = "service_connection", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub service_connection: Option<Option<uuid::Uuid>>,
    #[serde(rename = "config", skip_serializing_if = "Option::is_none")]
    pub config: Option<std::collections::HashMap<String, serde_json::Value>>,
    /// Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
    #[serde(rename = "managed", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub managed: Option<Option<String>>,
}

impl PatchedOutpostRequest {
    /// Outpost Serializer
    pub fn new() -> PatchedOutpostRequest {
        PatchedOutpostRequest {
            name: None,
            r#type: None,
            providers: None,
            service_connection: None,
            config: None,
            managed: None,
        }
    }
}

