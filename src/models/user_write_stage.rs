/*
 * authentik
 *
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// UserWriteStage : UserWriteStage Serializer
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserWriteStage {
    #[serde(rename = "pk")]
    pub pk: uuid::Uuid,
    #[serde(rename = "name")]
    pub name: String,
    /// Get object type so that we know how to edit the object
    #[serde(rename = "component")]
    pub component: String,
    /// Return object's verbose_name
    #[serde(rename = "verbose_name")]
    pub verbose_name: String,
    /// Return object's plural verbose_name
    #[serde(rename = "verbose_name_plural")]
    pub verbose_name_plural: String,
    /// Return internal model name
    #[serde(rename = "meta_model_name")]
    pub meta_model_name: String,
    #[serde(rename = "flow_set", skip_serializing_if = "Option::is_none")]
    pub flow_set: Option<Vec<models::FlowSet>>,
    #[serde(rename = "user_creation_mode", skip_serializing_if = "Option::is_none")]
    pub user_creation_mode: Option<models::UserCreationModeEnum>,
    /// When set, newly created users are inactive and cannot login.
    #[serde(rename = "create_users_as_inactive", skip_serializing_if = "Option::is_none")]
    pub create_users_as_inactive: Option<bool>,
    /// Optionally add newly created users to this group.
    #[serde(rename = "create_users_group", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub create_users_group: Option<Option<uuid::Uuid>>,
    #[serde(rename = "user_type", skip_serializing_if = "Option::is_none")]
    pub user_type: Option<models::UserTypeEnum>,
    #[serde(rename = "user_path_template", skip_serializing_if = "Option::is_none")]
    pub user_path_template: Option<String>,
}

impl UserWriteStage {
    /// UserWriteStage Serializer
    pub fn new(pk: uuid::Uuid, name: String, component: String, verbose_name: String, verbose_name_plural: String, meta_model_name: String) -> UserWriteStage {
        UserWriteStage {
            pk,
            name,
            component,
            verbose_name,
            verbose_name_plural,
            meta_model_name,
            flow_set: None,
            user_creation_mode: None,
            create_users_as_inactive: None,
            create_users_group: None,
            user_type: None,
            user_path_template: None,
        }
    }
}

