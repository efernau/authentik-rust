/*
 * authentik
 *
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// UserTypeEnum : * `internal` - Internal * `external` - External * `service_account` - Service Account * `internal_service_account` - Internal Service Account
/// * `internal` - Internal * `external` - External * `service_account` - Service Account * `internal_service_account` - Internal Service Account
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum UserTypeEnum {
    #[serde(rename = "internal")]
    Internal,
    #[serde(rename = "external")]
    External,
    #[serde(rename = "service_account")]
    ServiceAccount,
    #[serde(rename = "internal_service_account")]
    InternalServiceAccount,

}

impl ToString for UserTypeEnum {
    fn to_string(&self) -> String {
        match self {
            Self::Internal => String::from("internal"),
            Self::External => String::from("external"),
            Self::ServiceAccount => String::from("service_account"),
            Self::InternalServiceAccount => String::from("internal_service_account"),
        }
    }
}

impl Default for UserTypeEnum {
    fn default() -> UserTypeEnum {
        Self::Internal
    }
}

